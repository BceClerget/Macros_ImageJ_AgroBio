import ij.IJ;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.nio.file.StandardOpenOption;


IJ.showMessage("Define a new experiment.");

IJ.showMessage("Choose the folder containing the original tif images");
String sourceFolder = IJ.getDirectory("Choose the source image folder");

IJ.showMessage("Choose an empty processing folder to host the succesive parts of processing");
String outputFolder = IJ.getDirectory("Choose the output folder");


//Test if the source folder contains image. If not, abort
if (!new File(sourceFolder).isDirectory()){
	IJ.showMessage("The provided input Dir is not a directory. Abort.");return;
}
String[]fileList = new File(sourceFolder).list();
for (int i=0; i<fileList.length; i++) {
	if (!fileList[i].substring(fileList[i].length()-4).contains(".tif")) {
		IJ.showMessage("The file "+fileList[i]+" is not a tif image. Abort.");return;
    }
}
if(fileList.length<1){
	IJ.showMessage("No images in it. Abort.");return;
}



//Test if the output folder is empty. If not, abort
if (!new File(outputFolder).isDirectory()){
	IJ.showMessage("The provided output Dir is not a directory. Abort.");return;
}
fileList = new File(outputFolder).list();
if(fileList.length>0){
	IJ.showMessage("Output dir is not empty. Abort.");return;
}


//Create 1_Source, 2_AreaRoi, 3_CellRoi, 4_LacunesIndices
new File(outputFolder+"/"+"1_Source").mkdirs();
new File(outputFolder+"/"+"2_AreaRoi").mkdirs();
new File(outputFolder+"/"+"3_CellRoi").mkdirs();
new File(outputFolder+"/"+"4_LacunesIndices").mkdirs();



//Copy the images from raw to processing
fileList = new File(sourceFolder).list();
for (int i=0; i<fileList.length; i++) {
	IJ.log("Copying image "+i+" / "+fileList.length);
	Files.copy(Paths.get(sourceFolder+"/"+fileList[i]), Paths.get(outputFolder+"/1_Source/"+fileList[i]), StandardCopyOption.REPLACE_EXISTING);
}

Files.write(Paths.get(IJ.getDirectory("imagej")+"macros"+"/pathSource.txt"), new String(sourceFolder).getBytes(), StandardOpenOption.CREATE);
Files.write(Paths.get(IJ.getDirectory("imagej")+"macros"+"/pathProcessing.txt"), new String(outputFolder).getBytes(), StandardOpenOption.CREATE);

Files.write(Paths.get(outputFolder+"/pathSource.txt_savedformemory.txt"), new String(sourceFolder).getBytes(), StandardOpenOption.CREATE);
Files.write(Paths.get(outputFolder+"/pathProcessing.txt_savedformemory.txt"), new String(outputFolder).getBytes(), StandardOpenOption.CREATE);


IJ.showMessage("Finished !");
IJ.showMessage("Now run script 1, script2 ...Results will be stored in "+outputFolder);
IJ.showMessage("The definition of the input and output path will stay until you run again this script (for startin another serie for example)");
IJ.showMessage("If one day for any reason you want to change the paths by hand (for doing back an older series), you can do it by editing the files "+IJ.getDirectory("imagej")+"macros"+"/path......txt");


